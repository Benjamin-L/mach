//! This module corresponds to `mach/kern_return.h` and
//! `mach/i386/kern_return.h`.

use libc::types::os::arch::c95;

pub type kern_return_t = c95::c_int;

pub static KERN_SUCCESS : kern_return_t = 0;
pub static KERN_INVALID_ADDRESS : kern_return_t = 1;
pub static KERN_PROTECTION_FAILURE : kern_return_t = 2;
pub static KERN_NO_SPACE : kern_return_t = 3;
pub static KERN_INVALID_ARGUMENT : kern_return_t = 4;
pub static KERN_FAILURE : kern_return_t = 5;
pub static KERN_RESOURCE_SHORTAGE : kern_return_t = 6;
pub static KERN_NOT_RECEIVER : kern_return_t = 7;
pub static KERN_NO_ACCESS : kern_return_t = 8;
pub static KERN_MEMORY_FAILURE : kern_return_t = 9;
pub static KERN_MEMORY_ERROR : kern_return_t = 10;
pub static KERN_ALREADY_IN_SET : kern_return_t = 11;
pub static KERN_NOT_IN_SET : kern_return_t = 12;
pub static KERN_NAME_EXISTS : kern_return_t = 13;
pub static KERN_ABORTED : kern_return_t = 14;
pub static KERN_INVALID_NAME : kern_return_t = 15;
pub static KERN_INVALID_TASK : kern_return_t = 16;
pub static KERN_INVALID_RIGHT : kern_return_t = 17;
pub static KERN_INVALID_VALUE : kern_return_t = 18;
pub static KERN_UREFS_OVERFLOW : kern_return_t = 19;
pub static KERN_INVALID_CAPABILITY : kern_return_t = 20;
pub static KERN_RIGHT_EXISTS : kern_return_t = 21;
pub static KERN_INVALID_HOST : kern_return_t = 22;
pub static KERN_MEMORY_PRESENT : kern_return_t = 23;
pub static KERN_MEMORY_DATA_MOVED : kern_return_t = 24;
pub static KERN_MEMORY_RESTART_COPY : kern_return_t = 25;
pub static KERN_INVALID_PROCESSOR_SET : kern_return_t = 26;
pub static KERN_POLICY_LIMIT : kern_return_t = 27;
pub static KERN_INVALID_POLICY : kern_return_t = 28;
pub static KERN_INVALID_OBJECT : kern_return_t = 29;
pub static KERN_ALREADY_WAITING : kern_return_t = 30;
pub static KERN_DEFAULT_SET : kern_return_t = 31;
pub static KERN_EXCEPTION_PROTECTED : kern_return_t = 32;
pub static KERN_INVALID_LEDGER : kern_return_t = 33;
pub static KERN_INVALID_MEMORY_CONTROL : kern_return_t = 34;
pub static KERN_INVALID_SECURITY : kern_return_t = 35;
pub static KERN_NOT_DEPRESSED : kern_return_t = 36;
pub static KERN_TERMINATED : kern_return_t = 37;
pub static KERN_LOCK_SET_DESTROYED : kern_return_t = 38;
pub static KERN_LOCK_UNSTABLE : kern_return_t = 39;
pub static KERN_LOCK_OWNED : kern_return_t = 40;
pub static KERN_LOCK_OWNED_SELF : kern_return_t = 41;
pub static KERN_SEMAPHORE_DESTROYED : kern_return_t = 42;
pub static KERN_RPC_SERVER_TERMINATED : kern_return_t = 43;
pub static KERN_RPC_TERMINATE_ORPHAN : kern_return_t = 44;
pub static KERN_RPC_CONTINUE_ORPHAN : kern_return_t = 45;
pub static KERN_NOT_SUPPORTED : kern_return_t = 46;
pub static KERN_NODE_DOWN : kern_return_t = 47;
pub static KERN_NOT_WAITING : kern_return_t = 48;
pub static KERN_OPERATION_TIMED_OUT : kern_return_t = 49;
pub static KERN_CODESIGN_ERROR : kern_return_t = 50;
pub static KERN_POLICY_STATIC : kern_return_t = 51;
pub static KERN_RETURN_MAX : kern_return_t = 0x100;
